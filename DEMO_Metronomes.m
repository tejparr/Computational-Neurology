function DEMO_Metronomes
% This demo is designed to illustrate the way in which we may detect
% stimuli, like those generated by a metronome, with a periodic pattern.
% Specifically, it simulates the performance of a simple task in which a
% we must align our actions to the timings of a periodic stimulus. This is
% an interesting problem in that it is perhaps the simplest case of
% a task in which we periodically change our motor plans, and thus deals
% with the interface between planning of sequential movements and
% continuous implementation of these movements. Furthermore, it goes beyond
% a simple mapping from a discrete time-step to a fixed interval of
% continuous time, as the timing of each step must be adjusted to fit
% regularities in the outside world.
%
% Practically, this demo works through use of an active Bayesian filtering
% scheme formulated in continuous time. It assumes the use of a generative
% model formulated in generalised coordinates of motion. This model
% includes a series of oscillators at different frequences that are used to
% predict the frequency of an external stimulus. This is like using an 
% online Fourier basis set to estimate different frequencies. It also 
% includes beliefs that a body part (or computer cursor) is drawn to one of 
% two locations, with the location changing based upon a discrete 
% transition matrix. This allows for an interpretation of a discrete 
% planning-like operation which emerges from continuous dynamics.
%
% A key sub-problem in formulating this model is how periodic switching may
% occur. This is formulated here by assuming that some parts of the period
% of the oscillator are associated with updating of beliefs about our
% current position, and other parts of the cycle are associated with
% updates of our beliefs about where we will move next. Between the two is
% a period of time in which both are fixed, to insulate one belief from the
% other until the appropriate time.
%
% Thomas Parr
%--------------------------------------------------------------------------

rng default % For reproducibility
close all

% Simulation under default parameters
%--------------------------------------------------------------------------
OPT.plot  = 1;                       % Turn on plotting
[Y,~,~,~] = MetronomeModel(OPT);     % Construct generative model under defaults and invert
y = Y{1};

% Demonstrate effect of changing stimulus frequency
%--------------------------------------------------------------------------
OPT.freq  = 3;                       % Select third metronome
[Y,~,~,~] = MetronomeModel(OPT);     % Construct generative model and invert

% Demonstrate effect of occlusions
%--------------------------------------------------------------------------
troughs   = find(islocalmin(y(1,:)));
y(1,troughs(round(0.5*length(troughs))):troughs(round(0.85*length(troughs))))...
          = y(1,troughs(round(0.5*length(troughs))));
[Y,M,t,a] = MetronomeModel(OPT,[],y); % Construct generative model and invert

% Demonstrate effect of lesions
%--------------------------------------------------------------------------
P.gamma   = log(1);
[Y,M,t,a] = MetronomeModel(OPT,P,y); % Construct generative model and invert
